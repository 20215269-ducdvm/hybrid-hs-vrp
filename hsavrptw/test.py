#!/usr/bin/python
"""hsa

Usage:
    hsa.py <_problem_instance> --hms=<hms> --hmcr=<hmcr> --par=<par> --ni=<ni>

Options:
    --hms=<hms>     Harmony memory size e.g. 10, 20, 30...
    --hmcr=<hmcr>   Harmony memory consideration rate e.g. 0.6, 0.7, 0.8
    --par=<par>     Pitch adjustment rate e.g. 0.9
    --ni=<ni>       Number of improvisations e.g. 500, 1000, 2000

"""

if __name__ == '__main__':
    # arguments = docopt(__doc__)
    # problem_instance = parse_problem(arguments['<_problem_instance>'])
    # obj_fun = VRPTWObjectiveFunctionSequentialVector(arguments, problem_instance)
    # algorithm = HarmonySearchVRP(obj_fun)

    # num_processes = cpu_count() - 1  # use number of logical CPUs - 1 so that I have one available for use
    # num_iterations = 100
    #
    # results = (harmony_search(obj_fun, num_processes, num_iterations, algorithm))
    # # results = (harmony_search_serial(obj_fun, num_iterations, algorithm))
    # best_harmony = results.best_harmony
    # print("Time elapsed:", results.elapsed_time)
    # print("Best solution:", best_harmony)
    # print("Best fitness:", results.best_fitness)
    # print("Route:", VRPTWSequentialVectorConstraintChecker().set_params(_problem_instance).convert_to_list_of_routes(best_harmony))

    # TEST minimal example
    # x7 = [3, 1, 2, 4, 0]  # [(0, [0, 3, 1, 2, 0])] 63.4
    # x8 = [3, 2, 4, 1, 5]  # [(0, [0, 3, 2, 0]), (1, [0, 1, 0])] 88.2
    # x9 = [1, 4, 2, 5, 3]  # [(0, [0, 1, 0]), (1, [0, 2, 0]), (2, [0, 3, 0])] 105.8
    # x10 = [5, 3, 1, 2, 4]  # [(1, [0, 0]), (0, [0, 3, 1, 2, 0])] 63.4
    # x11 = [4, 5, 3, 1, 2]  # [(0, [0, 0]), (1, [0, 3, 1, 2, 0])] 63.4
    # x12 = [1, 2, 3, 4, 5]  # [(0, [0, 1, 2, 3, 4, 0])] -70.19
    # print(obj_fun.get_fitness(x12))

    # TEST toy example
    # x1 = [4, 5, 0, 3, 1, 2, 0, 6]  # [(0, [0, 4, 5, 0]), (1, [0, 3, 1, 2, 0]), (2, [0, 6, 0])] 168.2
    # x2 = [3, 1, 2, 0, 6, 5, 0, 4]  # [(1, [0, 3, 1, 2, 0]), (0, [0, 6, 5, 0]), (2, [0, 4, 0])] 170.9
    # xb = [3, 1, 2, 0, 6, 5, 4, 0]  # [(0, [0, 3, 1, 2, 0]), (1, [0, 6, 5, 4, 0])] 153.5
    # x3 = [0, 6, 5, 4, 0, 3, 1, 2]  # [(0, [0, 0]), (1, [0, 6, 5, 4, 0]), (2, [0, 3, 1, 2, 0])] 153.5
    #
    #C101
    #827.3
    x_1 = [81, 78, 76, 71, 70, 73, 77, 79, 80, 0, 57, 55, 54, 53, 56, 58, 60, 59, 0, 98, 96, 95, 94, 92, 93, 97, 100, 99, 0, 32, 33, 31, 35, 37, 38, 39, 36, 34, 0, 13, 17, 18, 19, 15, 16, 14, 12, 0, 90, 87, 86, 83, 82, 84, 85, 88, 89, 91, 0, 43, 42, 41, 40, 44, 46, 45, 48, 51, 50, 52, 49, 47, 0, 67, 65, 63, 62, 74, 72, 61, 64, 68, 66, 69, 0, 5, 3, 7, 8, 10, 11, 9, 6, 4, 2, 1, 75, 0, 20, 24, 25, 27, 29, 30, 28, 26, 23, 22, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    x_2 = [5, 24, 25, 10, 71, 99, 6, 66, 52, 0, 53, 76, 78, 83, 61, 34, 36, 4, 47, 0, 32, 43, 42, 40, 15, 14, 9, 2, 1, 0, 33, 31, 56, 92, 97, 88, 0, 93, 96, 19, 94, 73, 77, 79, 70, 21, 0, 90, 87, 86, 74, 62, 16, 12, 22, 0, 98, 17, 18, 29, 30, 46, 45, 51, 59, 50, 0, 13, 41, 35, 72, 60, 58, 100, 39, 0, 54, 63, 65, 82, 85, 84, 64, 23, 49, 0, 20, 3, 7, 95, 11, 28, 26, 89, 91, 75, 0, 81, 8, 27, 38, 37, 48, 68, 80, 69, 0, 55, 57, 67, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    x_3 = [41, 17, 70, 16, 86, 29, 99, 0, 58, 55, 89, 75, 81, 48, 20, 21, 34, 66, 0, 42, 31, 32, 82, 9, 95, 26, 52, 38, 0, 57, 67, 33, 40, 11, 61, 45, 49, 47, 85, 0, 3, 90, 12, 83, 93, 23, 64, 35, 0, 71, 7, 96, 28, 100, 39, 50, 72, 0, 98, 8, 92, 97, 94, 56, 60, 84, 0, 25, 78, 10, 15, 1, 79, 22, 2, 19, 0, 68, 76, 63, 27, 59, 14, 6, 18, 0, 73, 5, 4, 53, 77, 36, 69, 80, 0, 43, 13, 24, 37, 62, 87, 51, 88, 91, 0, 44, 46, 30, 74, 65, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    #C201
    #589.1
    x_4 = [93, 5, 75, 2, 1, 99, 100, 97, 92, 94, 95, 98, 7, 3, 4, 89, 91, 88, 84, 86, 83, 82, 85, 76, 71, 70, 73, 80, 79, 81, 78, 77, 96, 87, 90, 0, 67, 63, 62, 74, 72, 61, 64, 66, 69, 68, 65, 49, 55, 54, 53, 56, 58, 60, 59, 57, 40, 44, 46, 45, 51, 50, 52, 47, 43, 42, 41, 48, 0, 20, 22, 24, 27, 30, 29, 6, 32, 33, 31, 35, 37, 38, 39, 36, 34, 28, 26, 23, 18, 19, 16, 14, 12, 15, 17, 13, 25, 9, 11, 10, 8, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    #R101
    #1645.7
    x_5 = [2, 21, 73, 41, 56, 4, 0, 5, 83, 61, 85, 37, 93, 0, 14, 44, 38, 43, 13, 0, 27, 69, 76, 79, 3, 54, 24, 80, 0, 28, 12, 40, 53, 26, 0, 30, 51, 9, 66, 1, 0, 31, 88, 7, 10, 0, 33, 29, 78, 34, 35, 77, 0, 36, 47, 19, 8, 46, 17, 0, 39, 23, 67, 55, 25, 0, 45, 82, 18, 84, 60, 89, 0, 52, 6, 0, 59, 99, 94, 96, 0, 62, 11, 90, 20, 32, 70, 0, 63, 64, 49, 48, 0, 65, 71, 81, 50, 68, 0, 72, 75, 22, 74, 58, 0, 92, 42, 15, 87, 57, 97, 0, 95, 98, 16, 86, 91, 100, 0, 0, 0, 0, 0, 0]

    #R201
    #1248.4
    x_6 = [5, 83, 45, 82, 47, 36, 64, 11, 19, 62, 7, 88, 90, 18, 84, 8, 49, 46, 48, 60, 17, 91, 100, 93, 89, 0, 2, 72, 39, 75, 23, 67, 21, 40, 73, 41, 22, 87, 57, 43, 37, 97, 96, 13, 58, 0, 95, 59, 92, 42, 15, 14, 98, 61, 16, 44, 38, 86, 85, 99, 6, 94, 53, 26, 54, 56, 74, 4, 55, 25, 24, 80, 0, 33, 65, 63, 31, 69, 52, 27, 28, 12, 29, 76, 30, 71, 9, 51, 81, 79, 78, 34, 3, 50, 20, 10, 32, 66, 35, 68, 77, 1, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    #RC101
    #1693.2
    x_7 = [5, 45, 2, 7, 6, 8, 3, 1, 70, 100, 0, 14, 47, 12, 73, 79, 46, 4, 60, 0, 27, 29, 31, 30, 34, 26, 32, 93, 0, 28, 33, 85, 89, 91, 0, 39, 42, 44, 61, 81, 54, 96, 0, 59, 75, 87, 97, 58, 77, 0, 63, 76, 51, 22, 49, 20, 24, 0, 64, 90, 84, 56, 66, 0, 65, 52, 99, 57, 86, 74, 0, 69, 98, 88, 53, 78, 55, 68, 0, 72, 36, 38, 41, 40, 43, 37, 35, 0, 82, 11, 15, 16, 9, 10, 13, 17, 0, 83, 23, 21, 19, 18, 48, 25, 0, 92, 95, 62, 67, 71, 94, 50, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    #RC201
    #1403.3
    x_8 = [42, 36, 39, 72, 45, 5, 2, 98, 88, 61, 44, 40, 38, 41, 81, 94, 50, 34, 32, 26, 89, 48, 24, 25, 77, 58, 0, 65, 14, 47, 59, 75, 16, 15, 11, 12, 73, 78, 79, 7, 6, 8, 46, 3, 4, 1, 55, 68, 0, 69, 82, 52, 83, 64, 19, 23, 21, 18, 76, 85, 84, 51, 49, 22, 20, 66, 56, 96, 54, 37, 43, 35, 93, 91, 80, 0, 92, 95, 63, 33, 28, 27, 29, 31, 30, 62, 67, 71, 90, 99, 57, 86, 87, 9, 53, 10, 97, 74, 13, 17, 60, 100, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    # print(obj_fun.get_fitness(x_7))
